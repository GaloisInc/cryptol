#!/bin/sh
# cvecheck-build.sh: build what's needed to do CVE checks
# usage: ./cvecheck-build.sh

set -e

TOP_DIR=$(realpath $(dirname $0)/../..)
MY_BIN_DIR=$(realpath $(dirname $0))
PYTHON_DIR=${TOP_DIR}/cryptol-remote-api/python

##################################################################
##### For Haskell: build MangoIV/cabal-audit: ####

# We build cabal-audit "out of line" from the current cabal due to its
# complicated mix of non-hackage dependencies.
#
#   (Maybe we can change this once MargoIV/cabal-audit becomes more
#   mature and the required dependencies are in hackage.)

cd ${MY_BIN_DIR}/..

if [ ! -e cabal-audit-src ]; then
  echo "\ncvecheck-build.sh: acquire cabal-audit source ..."
  wget -O cabal-audit.tar.gz \
    https://github.com/MangoIV/cabal-audit/archive/2fe849d.tar.gz
    # software's a little finicky, so we pick a known commit.
  tar xzvf cabal-audit.tar.gz
  rm cabal-audit.tar.gz
  mv cabal-audit-* cabal-audit-src
fi

echo "\ncvecheck-build.sh: build cabal-audit source ..."
cd cabal-audit-src
cabal build

echo "\ncvecheck-build.sh: install cabal-audit in ${MY_BIN_DIR}."
cp -pv $(cabal list-bin -v0 exe:cabal-audit) ${MY_BIN_DIR}


##################################################################
##### For Python: pip-audit ####

cd ${PYTHON_DIR}

echo "\ninstalling pip-audit."
pip install pip-audit


