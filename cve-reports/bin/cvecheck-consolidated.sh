#!/bin/sh
# cvecheck-all.sh: do all CVE checks
# usage: cvecheck-all.sh

set -e

export THIS_DIR=$(realpath $(dirname $0))
. ${THIS_DIR}/variables.sh

JQ='jq'
JQARGS='--indent 2'

if ! which ${JQ} >/dev/null ; then
  echo "no ${JQ} executable found"
  exit 1
fi

# debugging/testing
# HS_JSON_FILE=~/src/GaloisInc/hello-cve-scans/hs-project/T.json
# PY_JSON_FILE=~/src/GaloisInc/hello-cve-scans/py-project/T-pip-audit.json

# echo consolidating
# for f in ${HS_JSON_FILE} ${PY_JSON_FILE}; do
#     echo "  " $f
# done;
# echo into ${COMMON_JSON_FILE}

${JQ} ${JQARGS} \
   'to_entries .[] | {language: "Haskell", id: .value.advisories.[0].id, title: .value.advisories.[0].summary, package: {name: .key, version: .value.version}}' \
   ${HS_JSON_FILE}

${JQ} ${JQARGS} \
    '.dependencies | .[] | select(.vulns != []) | {language: "Python", id: .vulns.[0].id , title: "", package: {name: .name, version: .version}}' \
    ${PY_JSON_FILE}
