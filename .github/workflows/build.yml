on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # XXX: Remove fail-fast when macos and windows are working
      # 1. setup-haskell needs to be implemented to work for macos and windows
      # 2. cry build/test might need modifications
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        ghc: ["8.4.4", "8.6.5", "8.8.1"]
        cabal: ["3.0.0.0"]
    name: Cryptol - GHC v${{ matrix.ghc }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        # https://github.com/actions/setup-haskell/pull/12
      - uses: haskell-CI/setup@master
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - uses: actions/cache@v1
        name: Cache ~/.cabal/packages
        with:
          path: ~/.cabal/packages
          key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-packages
      - uses: actions/cache@v1
        name: Cache ~/.cabal/store
        with:
          path: ~/.cabal/store
          key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store
      - uses: actions/cache@v1
        name: Cache dist-newstyle
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-dist-newstyle
      - uses: actions/cache@v1
        name: Cache sandbox
        with:
          path: .cabal-sandbox
          key: ${{ runner.os }}-${{ matrix.ghc }}-sandbox

      - name: Install System Dependencies
        shell: bash
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          case "$RUNNER_OS" in
          Linux)
            curl -o z3.zip -sL "https://github.com/Z3Prover/z3/releases/download/z3-4.8.7/z3-4.8.7-x64-ubuntu-16.04.zip"
            unzip z3.zip
            cp z3-*/bin/z3 $GITHUB_WORKSPACE/bin/z3
            chmod +x $GITHUB_WORKSPACE/bin/z3

            sudo apt-get update -y && sudo apt-get install -y texlive pandoc
            ;;
          macOS)
            curl -o z3.zip -sL "https://github.com/Z3Prover/z3/releases/download/z3-4.8.7/z3-4.8.7-x64-osx-10.14.6.zip"
            unzip z3.zip
            cp z3-*/bin/z3 $GITHUB_WORKSPACE/bin/z3
            chmod +x $GITHUB_WORKSPACE/bin/z3

            brew update-reset && brew update
            brew cask install basictex
            brew install pandoc librsvg

            echo "::add-path::/Library/TeX/texbin"
            ;;
          Windows)
            curl -o z3.zip -sL "https://github.com/Z3Prover/z3/releases/download/z3-4.8.7/z3-4.8.7-x64-win.zip"
            7z x -bd z3.zip
            cp z3-*/bin/z3.exe $GITHUB_WORKSPACE/bin/z3.exe

            choco install --no-progress -r -y rsvg-convert pandoc

            # MikTeX and LaTeX do not provide versioned download URLs, which break things like chocolatey
            curl -o miktexsetup-x64.zip -sL "https://miktex.org/download/win/miktexsetup-x64.zip"
            7z x -bd miktexsetup-x64.zip
            ls
            mv miktex*.exe miktexsetup.exe
            miktexsetup.exe --package-set=basic --quiet --modify-path install
            ;;
          *)
            echo "$RUNNER_OS not supported"
            exit 1
            ;;
          esac
          echo "::add-path::$GITHUB_WORKSPACE/bin"

      - name: Check path
        shell: bash
        run: |
          z3 --version
          pandoc --version
          pdflatex --version

      # - name: Install Dependencies
      #   run: |
      #     cp cabal.GHC-${{ matrix.ghc }}.config cabal.project.freeze
      #     cabal update
      #     cabal configure --allow-newer --enable-tests
      #     cabal build --only-dependencies exe:cryptol
      #     mkdir -p bin
      #     cabal install --installdir=bin test-lib

      - name: Build
        shell: bash
        run: |
          # Works around a TODO in the makefile in case make dist doesn't run fully the first time.
          cabal v1-sandbox init
          make dist

      - name: Test
        shell: bash
        run: make test
