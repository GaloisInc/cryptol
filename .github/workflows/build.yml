name: Cryptol
on:
  push:
    paths-ignore: ["**.md", ".github/workflows/docs.yml"]
  pull_request:
    paths-ignore: ["**.md", ".github/workflows/docs.yml"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        ghc: ["8.4.4", "8.6.5", "8.8.1"]
        cabal: ["3.0.0.0"]
    name: Cryptol - GHC v${{ matrix.ghc }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        # https://github.com/actions/setup-haskell/pull/12
      - uses: haskell-CI/setup@master
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - uses: actions/cache@v1
        name: Cache ~/.cabal/store
        with:
          # TODO: replace path: ~/.cabal/store with ${{ steps.setup-haskell.outputs.store }} when implemented
          path: ~/.cabal/store
          # https://github.com/actions/cache/issues/109 "Enable always writing cache to support hermetic build systems"
          # https://github.com/actions/cache/issues/109#issuecomment-558771281
          # https://github.com/actions/cache/issues/239#issuecomment-606950711 Investigate this workaround if cache starts filling up
          key: store-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/cabal.GHC-*') }}-${{ github.sha }}
          restore-keys: |
            store-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/cabal.GHC-*') }}-
            store-${{ runner.os }}-${{ matrix.ghc }}-

      - name: Install System Dependencies
        shell: bash
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          case "$RUNNER_OS" in
          Linux)
            curl -o z3.zip -sL "https://github.com/Z3Prover/z3/releases/download/z3-4.8.7/z3-4.8.7-x64-ubuntu-16.04.zip"
            unzip z3.zip
            cp z3-*/bin/z3 $GITHUB_WORKSPACE/bin/z3
            chmod +x $GITHUB_WORKSPACE/bin/z3
            ;;
          macOS)
            curl -o z3.zip -sL "https://github.com/Z3Prover/z3/releases/download/z3-4.8.7/z3-4.8.7-x64-osx-10.14.6.zip"
            unzip z3.zip
            cp z3-*/bin/z3 $GITHUB_WORKSPACE/bin/z3
            chmod +x $GITHUB_WORKSPACE/bin/z3
            ;;
          Windows)
            curl -o z3.zip -sL "https://github.com/Z3Prover/z3/releases/download/z3-4.8.7/z3-4.8.7-x64-win.zip"
            7z x -bd z3.zip
            cp z3-*/bin/z3.exe $GITHUB_WORKSPACE/bin/z3.exe
            ;;
          *)
            echo "$RUNNER_OS not supported"
            exit 1
            ;;
          esac
          echo "::add-path::$GITHUB_WORKSPACE/bin"

      - name: Check path
        shell: bash
        run: z3 --version

      - name: Install Dependencies
        shell: bash
        run: |
          if [[ $RUNNER_OS != "Windows" ]]; then cp cabal.GHC-${{ matrix.ghc }}.config cabal.project.freeze; fi
          cabal configure --allow-newer -j2
          cabal build --only-dependencies exe:cryptol
          mkdir -p bin
          cabal install --install-method copy --installdir bin test-lib

      - name: Build
        shell: bash
        run: cabal build exe:cryptol

      - name: Test
        shell: bash
        run: ./cry test
