name: Cryptol
on: [push, pull_request]

jobs:
  changed:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.get-changed.outputs.changed-files }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: get-changed
        run: echo "::set-output name=changed-files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ghc: ["8.4.4", "8.6.5", "8.8.3"]
    name: Cryptol - GHC v${{ matrix.ghc }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-haskell@v1.1
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}

      - uses: actions/cache@v1
        name: Cache cabal store
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          # https://github.com/actions/cache/issues/109 "Enable always writing cache to support hermetic build systems"
          # https://github.com/actions/cache/issues/239#issuecomment-606950711 Investigate this workaround if cache starts filling up
          key: store-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/cabal.GHC-*') }}-${{ github.sha }}
          restore-keys: |
            store-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/cabal.GHC-*') }}-
            store-${{ runner.os }}-${{ matrix.ghc }}-
            store-${{ runner.os }}-

      - uses: actions/cache@v1
        name: Cache dist-newstyle
        with:
          path: dist-newstyle
          key: dist-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/cabal.GHC-*') }}-${{ github.sha }}
          restore-keys: |
            dist-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/cabal.GHC-*') }}-
            dist-${{ runner.os }}-${{ matrix.ghc }}-

      - shell: bash
        run: .github/ci.sh install_system_deps
        env:
          Z3_VERSION: "4.8.7"
          CVC4_VERSION: "4.1.7"
          YICES_VERSION: "2.6.2"

      - shell: bash
        run: .github/ci.sh install_deps

      - shell: bash
        run: cabal v2-build exe:cryptol exe:cryptol-html

      - shell: bash
        run: .github/ci.sh test_dist

      - if: matrix.ghc == '8.8.3'
        uses: actions/upload-artifact@v1
        with:
          path: dist
          name: ${{ matrix.os }}-bins

  docs:
    runs-on: ubuntu-latest
    needs: [changed]
    # if: "startsWith(github.ref, 'refs/tags/v') || contains(needs.changed.outputs.changed, 'docs/')"
    steps:
      - uses: actions/checkout@v2
      - uses: docker://pandoc/latex:latest
        with:
          args: >-
            sh -c
            "
            apk add make &&
            tlmgr install subfigure lastpage preprint adjustbox nag collectbox sectsty todonotes palatino mathpazo &&
            cd docs &&
            make
            "
      - uses: actions/upload-artifact@v1
        with:
          path: docs
          name: docs

  bundle:
    runs-on: ${{ matrix.os }}
    # if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ghc: ["8.8.3"]
    needs: [docs, build]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          path: dist/bin
          name: ${{ matrix.os }}-bins

      - uses: actions/download-artifact@v1
        with:
          path: docs
          name: docs

      - shell: bash
        run: .github/ci.sh bundle_files

      - id: cryptol
        shell: bash
        run: echo "::set-output name=version::$(./dist/cryptol -v | grep Cryptol | cut -d' ' -f2)"

      - if: runner.os == 'Windows'
        env:
          VERSION: "${{ steps.cryptol.outputs.version }}"
        run: |
          & "$env:WIX\bin\heat.exe" dir "$pwd" -o allfiles.wxs -nologo -var var.pkg -ag -wixvar -cg ALLFILES -srd -dr INSTALLDIR -sfrag
          & "$env:WIX\bin\candle.exe" -ext WixUIExtension -ext WixUtilExtension -dversion="$env:VERSION" -dpkg="$pwd" win32\cryptol.wxs
          & "$env:WIX\bin\candle.exe" -ext WixUIExtension -ext WixUtilExtension -dversion="$env:VERSION" -dpkg="$pwd" allfiles.wxs
          & "$env:WIX\bin\light.exe" -ext WixUIExtension -ext WixUtilExtension -sval -o cryptol.msi cryptol.wixobj allfiles.wixobj
          Move-Item -Path .\cryptol.msi -Destination .\dist

      - shell: bash
        env:
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: .github/ci.sh zip_dist

      - uses: actions/upload-artifact@v1
        with:
          name: cryptol-${{ steps.cryptol.outputs.version }}-${{ matrix.os }}-x86_64.sig
          path: dist.zip.sig

      - uses: actions/upload-artifact@v1
        with:
          name: cryptol-${{ steps.cryptol.outputs.version }}-${{ matrix.os }}-x86_64
          path: dist.zip
