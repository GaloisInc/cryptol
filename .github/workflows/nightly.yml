name: Cryptol Nightly Builds
on:
  push:
    branches: ["actions/**"]
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  outputs:
    runs-on: ubuntu-latest
    outputs:
      cryptol-version: ${{ steps.cryptol.outputs.cryptol-version }}
      cryptol-name: ${{ steps.cryptol.outputs.name }}
    steps:
      - uses: actions/checkout@v2
      - id: cryptol
        run: |
          .github/ci.sh set_version
          .github/ci.sh output name cryptol-$(.github/ci.sh ver)-$(date -I)

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker://pandoc/latex:2.9.2
        with:
          args: >-
            sh -c
            "
            apk add make &&
            tlmgr install subfigure lastpage preprint adjustbox nag collectbox sectsty todonotes palatino mathpazo &&
            cd docs &&
            make
            "
      - uses: actions/upload-artifact@v2
        with:
          path: docs
          name: docs

  docker-cryptol:
    runs-on: ubuntu-latest
    needs: [outputs]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Publish to Registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.GITHUBCRYPTOL_USERNAME }}
          password: ${{ secrets.GITHUBCRYPTOL }}
          repository: galoisinc/cryptol
          tags: "nightly"
          add_git_labels: true
          push: ${{ github.event_name == 'schedule' }}

  docker-cryptol-remote-api:
    runs-on: ubuntu-latest
    needs: [outputs]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Publish to Registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.GITHUBCRYPTOL_USERNAME }}
          password: ${{ secrets.GITHUBCRYPTOL }}
          repository: galoisinc/cryptol-remote-api
          tags: "nightly"
          add_git_labels: true
          push: ${{ github.event_name == 'schedule' }}
          dockerfile: cryptol-remote-api/Dockerfile
      - name: Build test-cryptol-remote-api
        uses: docker/build-push-action@v1
        with:
          tags: test
          repository: galoisinc/cryptol-remote-api
          push: false
          dockerfile: cryptol-remote-api/test/Dockerfile
          build_args: GHCVER=8.10.3
      - name: Test cryptol-remote-api helm chart
        run: |
          set -x
          kind create cluster --wait 10m
          kind load docker-image galoisinc/cryptol-remote-api:nightly
          kind load docker-image galoisinc/cryptol-remote-api:test
          helm install --wait cra-http ./helm/cryptol-remote-api --set server.connType=http --set image.tag=nightly
          helm install --wait cra-socket ./helm/cryptol-remote-api --set server.connType=socket --set image.tag=nightly
          kubectl run --rm --attach test-http --image=galoisinc/cryptol-remote-api:test --image-pull-policy=Never --restart=Never -- http cra-http-cryptol-remote-api 8080
          kubectl run --rm --attach test-socket --image=galoisinc/cryptol-remote-api:test --image-pull-policy=Never --restart=Never -- socket cra-socket-cryptol-remote-api 8080

  build:
    needs: [outputs, docs]
    runs-on: ${{ matrix.os }}
    env:
      VERSION: ${{ needs.outputs.outputs.cryptol-version }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-haskell@v1
        with:
          ghc-version: 8.6.5

      - uses: actions/cache@v2
        name: Cache cabal store
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.sha }}
          restore-keys: |
            cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-

      - uses: actions/download-artifact@v2
        with:
          path: docs
          name: docs

      - shell: bash
        run: .github/ci.sh build

      - shell: bash
        run: .github/ci.sh setup_dist_bins

      - shell: bash
        run: .github/ci.sh bundle_files

      - if: runner.os == 'Windows'
        run: .github/wix.ps1

      - if: runner.os == 'Windows'
        shell: bash
        env:
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: .github/ci.sh sign cryptol.msi

      - shell: bash
        env:
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          name: ${{ needs.outputs.outputs.cryptol-name }}
        run: .github/ci.sh zip_dist

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ needs.outputs.outputs.cryptol-name }}-${{ runner.os }}
          path: "${{ needs.outputs.outputs.cryptol-name }}.tar.gz*"

      - uses: actions/upload-artifact@v2
        if: runner.os == 'Windows'
        with:
          name: ${{ needs.outputs.outputs.cryptol-name }}-${{ runner.os }}
          path: "cryptol.msi*"
