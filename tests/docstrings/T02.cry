
module T02 where

submodule F where
  parameter
    type n : #
    type constraint (fin n, n >= 2)

  /**
    * ```
    * :check c == 1
    * ```
    */
  private
    c : Z n
    c = 1

  // this docstring has a less interesting prefix and uses 4 ticks
  /**
   Longer code block delimiters are supported
   ````repl
   :exhaust p
   ````
   */
  p x = c + x == x + c

submodule F7 = submodule F where
  type n = 7

// this docstring has an unusual prefix
/**
 ** ```repl
 ** let y = 20
 **
 ** :check f 10 \
 **          == 20
 ** ``` */
f : Integer -> Integer
f x = x + x
